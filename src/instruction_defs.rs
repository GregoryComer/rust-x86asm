use ::{BroadcastMode, Instruction, MaskReg, MergeMode, Mnemonic, OperandSize, Reg, RoundingMode};
use ::RegType::*;
use ::instruction_def::*;
use ::Operand::*;
use ::instruction_def::OperandType::*;
use ::instruction_def::OperandSizePrefixBehavior::*;
use ::Reg::*;
use ::RegScale::*;

pub struct TestCase {
	addr_size: OperandSize,
	instruction: Instruction,
	expected: &'static [u8],
}
pub static INSTR_DEFS: [InstructionDefinition; 3561] = [
	InstructionDefinition {
	    mnemonic: Mnemonic::AAA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 55,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AAD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 213,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(10),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AAD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 213,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AAM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 212,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(10),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AAM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 212,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AAS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 63,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 19,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 19,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 19,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADCX,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(246),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADCX,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(246),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 4,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 5,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 5,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 5,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 2,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 2,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 3,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 3,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 3,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADDPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADDSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADDSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADDSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADDSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VADDSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADOX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(246),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ADOX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(246),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AESDEC,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(222),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VAESDEC,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(222),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AESDECLAST,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(223),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VAESDECLAST,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(223),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AESENC,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(220),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VAESENC,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(220),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AESENCLAST,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(221),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VAESENCLAST,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(221),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AESIMC,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(219),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VAESIMC,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(219),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AESKEYGENASSIST,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(223),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VAESKEYGENASSIST,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(223),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 36,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 37,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 37,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 37,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 32,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 32,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 33,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 33,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 33,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 34,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 34,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 35,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 35,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::AND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 35,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ANDN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(242),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ANDN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(242),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ANDNPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ANDNPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDNPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 85,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ANDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ANDPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VANDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 84,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ARPL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 99,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BEXTR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(247),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BEXTR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(247),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLENDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(13),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(13),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(13),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLENDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(12),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(12),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(12),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLENDVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::XMM0)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(75),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(75),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLENDVPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::XMM0)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDVPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(74),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDVPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(74),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLSI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(243),
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLSI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(243),
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLSMSK,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(243),
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLSMSK,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(243),
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLSR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(243),
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BLSR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(243),
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 26,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 26,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDCU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 26,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDCU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 26,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDCN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDCN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDLDX,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 26,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mib }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDMK,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDMK,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDMOV,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 26,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Bound), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDMOV,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 26,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Bound), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDMOV,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Bound), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDMOV,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Bound), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BNDSTX,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mib }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Bound) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BOUND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 98,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BOUND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 98,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BSF,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 188,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BSF,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 188,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BSF,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 188,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BSR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 189,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BSR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 189,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BSR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 189,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BSWAP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 200,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BSWAP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 200,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 163,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 163,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 163,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 187,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 187,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 187,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 179,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 179,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 179,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 171,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 171,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 171,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BTS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 186,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BZHI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(245),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::BZHI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(245),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 232,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 232,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 154,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Far16, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 154,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Far32, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far16, op_type: OperandType::Mem(Some(OperandSize::Far16)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far32, op_type: OperandType::Mem(Some(OperandSize::Far32)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far64, op_type: OperandType::Mem(Some(OperandSize::Far64)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CBW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 152,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CWDE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 152,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CDQE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 152,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CLAC,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(202),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CLC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 248,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 252,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CLFLUSH,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CLFLUSHOPT,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CLI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 250,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CLTS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 6,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CLWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 245,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVA,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVA,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVAE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 67,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVAE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 67,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 67,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVBE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVBE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 68,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 68,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 68,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 79,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 79,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 79,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVGE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 77,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVGE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 77,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 77,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 76,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 76,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 76,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVLE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 78,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVLE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 78,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 78,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNA,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNA,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNAE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNAE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 67,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 67,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 67,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNBE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNBE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 67,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 67,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 67,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 78,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 78,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 78,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNGE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 76,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNGE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 76,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 76,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 77,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 77,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 77,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNLE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 79,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNLE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 79,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 79,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNO,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 65,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNO,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 65,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 65,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 75,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 75,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 75,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 73,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 73,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 73,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNZ,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNZ,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVNZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVO,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 64,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVO,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 64,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 64,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVPE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVPE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMOVPE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 60,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 61,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 61,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 61,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 57,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 57,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 57,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 59,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 59,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 59,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 166,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 167,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 167,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 167,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPSB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 166,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 167,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 167,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPSQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 167,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCMPSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPXCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 176,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPXCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 176,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPXCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 177,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPXCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 177,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPXCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 177,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPXCHG8B,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CMPXCHG16B,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::COMISD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 47,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMISD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 47,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMISD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 47,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::COMISS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 47,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMISS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 47,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMISS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 47,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CPUID,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 162,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CRC32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(240),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CRC32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(240),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CRC32,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(241),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CRC32,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(241),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CRC32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(240),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CRC32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(241),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTDQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTDQ2PS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTDQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTPD2PI,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTPD2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTPI2PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTPI2PS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTPS2PD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTPS2PI,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSD2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSD2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSD2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSI2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSI2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSI2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSI2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSI2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSI2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSI2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSI2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSI2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSI2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSI2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSI2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSS2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSS2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSS2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 90,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTTPD2PI,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTTPS2PI,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSD2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CVTTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSS2SI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CWD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 153,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 153,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::CQO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 153,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DAA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 39,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DAS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 47,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DEC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 254,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DEC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 254,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DEC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DEC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DEC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DEC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 72,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DEC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 72,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DIV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DIV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DIVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DIVPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DIVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DIVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDIVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 94,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(65),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(65),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::DPPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDPPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDPPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::EMMS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 119,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ENTER,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 200,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::EXTRACTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(23),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXTRACTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(23),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXTRACTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(23),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::F2XM1,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(240),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FABS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(225),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(192),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(192),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FADDP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(192),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FADDP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(193),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FBLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Mem(Some(OperandSize::Tbyte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FBSTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Mem(Some(OperandSize::Tbyte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCHS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(224),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCLEX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 155,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(226),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FNCLEX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(226),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCMOVB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(192),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCMOVE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(200),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCMOVBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(208),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCMOVU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(216),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCMOVNB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(192),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCMOVNE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(200),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCMOVNBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(208),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCMOVNU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(216),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(208),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(209),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(216),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(217),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOMPP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(217),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOMI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(240),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOMIP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(240),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FUCOMI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(232),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FUCOMIP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(232),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FCOS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(255),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDECSTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(246),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(240),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(248),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIVP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(248),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIVP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(249),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIDIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIDIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIVR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIVR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIVR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(248),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIVR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(240),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIVRP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(240),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FDIVRP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(241),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIDIVR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIDIVR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FFREE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(192),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FICOM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FICOM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FICOMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FICOMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FILD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FILD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FILD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FINCSTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(247),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FINIT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 155,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(227),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FNINIT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(227),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISTTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISTTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISTTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Mem(Some(OperandSize::Tbyte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(192),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLD1,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(232),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLDL2T,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(233),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLDL2E,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(234),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLDPI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(235),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLDLG2,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(236),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLDLN2,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(237),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLDZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(238),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLDCW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FLDENV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(200),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(200),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FMULP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(200),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FMULP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(201),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FIMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FNOP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(208),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FPATAN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FPREM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(248),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FPREM1,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(245),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FPTAN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FRNDINT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(252),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FRSTOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSAVE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 155,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: Some(221),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FNSAVE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSCALE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(253),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSIN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(254),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSINCOS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(251),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSQRT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(250),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(208),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Mem(Some(OperandSize::Tbyte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSTP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(216),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSTCW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 155,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: Some(217),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FNSTCW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSTENV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 155,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: Some(217),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FNSTENV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSTSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 155,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: Some(221),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FNSTSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(224),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(232),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUBP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(232),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUBP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(233),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUBR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUBR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUBR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(232),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUBR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(224),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUBRP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(224),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ST)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FSUBRP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(225),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISUBR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FISUBR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FTST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(228),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FUCOM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(224),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FUCOM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(225),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FUCOMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(232),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FUCOMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(233),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FUCOMPP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(233),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FXAM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(229),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FXCH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(200),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::FixedPostAddend, access: OperandAccess::Read, size: OperandSize::Tbyte, op_type: OperandType::Reg(Fpu) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FXCH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(201),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FXRSTOR,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FXRSTOR64,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FXSAVE,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FXSAVE64,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FXTRACT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(244),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FYL2X,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(241),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FYL2XP1,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(249),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::HADDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 124,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VHADDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 124,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VHADDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 124,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::HADDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 124,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VHADDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 124,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VHADDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 124,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::HLT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 244,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::HSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 125,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VHSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 125,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VHSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 125,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::HSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 125,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VHSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 125,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VHSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 125,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IDIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IDIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IDIV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IDIV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IDIV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 175,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 175,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 175,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 107,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 107,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 107,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 105,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 105,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IMUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 105,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 228,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IN,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 229,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IN,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 229,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 236,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IN,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 237,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IN,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 237,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 254,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 254,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 64,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INC,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 64,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 108,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 109,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 109,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INSB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 108,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 109,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 109,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INSERTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VINSERTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VINSERTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 204,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(3)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INTO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 206,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INVD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 8,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INVLPG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INVPCID,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(130),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::INVPCID,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(130),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IRET,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 207,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IRETD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 207,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::IRETQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 207,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 119,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 118,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JCXZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JECXZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JRCXZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 116,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 125,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 124,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 118,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 119,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 117,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 124,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 125,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 117,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JPE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JPO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 116,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 130,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 130,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 134,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 134,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 130,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 130,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 132,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 132,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 132,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 132,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 143,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 143,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 141,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 141,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 140,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 140,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 142,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 142,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 134,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 134,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 130,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 130,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 133,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 133,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 142,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 142,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 140,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 140,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 141,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 141,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 143,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 143,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 139,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 139,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 137,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 137,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 133,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JNZ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 133,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 138,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 138,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JPE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 138,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JPE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 138,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JPO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 139,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JPO,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 139,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 136,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 233,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 233,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 234,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Far16, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 234,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Far32, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far16, op_type: OperandType::Mem(Some(OperandSize::Far16)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far32, op_type: OperandType::Mem(Some(OperandSize::Far32)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::JMP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far64, op_type: OperandType::Mem(Some(OperandSize::Far64)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KADDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KADDB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KADDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KADDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 74,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KANDNW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KANDNB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KANDNQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KANDND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 66,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KANDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 65,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KANDB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 65,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KANDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 65,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KANDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 65,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(Mask), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(Mask), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mask), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(Mask), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 145,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 145,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 145,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 145,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KNOTW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 68,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KNOTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 68,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KNOTQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 68,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KNOTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 68,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KORTESTW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 152,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KORTESTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 152,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KORTESTQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 152,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KORTESTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 152,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KORW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KORB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KORQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 69,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KSHIFTLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KSHIFTLB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KSHIFTLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KSHIFTLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KSHIFTRW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KSHIFTRB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KSHIFTRQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KSHIFTRD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KTESTW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 153,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KTESTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 153,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KTESTQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 153,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KTESTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 153,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KUNPCKBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 75,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KUNPCKWD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 75,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KUNPCKDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 75,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KXNORW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KXNORB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KXNORQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KXNORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 70,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KXORW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KXORB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KXORQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::KXORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 71,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LAHF,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 159,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LAR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 2,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LAR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 2,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LDDQU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 240,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VLDDQU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 240,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VLDDQU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 240,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LDMXCSR,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VLDMXCSR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LDS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 197,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far16, op_type: OperandType::Mem(Some(OperandSize::Far16)) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LDS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 197,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far32, op_type: OperandType::Mem(Some(OperandSize::Far32)) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LSS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 178,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far16, op_type: OperandType::Mem(Some(OperandSize::Far16)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LSS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 178,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far32, op_type: OperandType::Mem(Some(OperandSize::Far32)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 178,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far64, op_type: OperandType::Mem(Some(OperandSize::Far64)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LES,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 196,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far16, op_type: OperandType::Mem(Some(OperandSize::Far16)) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LES,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 196,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far32, op_type: OperandType::Mem(Some(OperandSize::Far32)) }), None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LFS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 180,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far16, op_type: OperandType::Mem(Some(OperandSize::Far16)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LFS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 180,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far32, op_type: OperandType::Mem(Some(OperandSize::Far32)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LFS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 180,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far64, op_type: OperandType::Mem(Some(OperandSize::Far64)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LGS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 181,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far16, op_type: OperandType::Mem(Some(OperandSize::Far16)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LGS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 181,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far32, op_type: OperandType::Mem(Some(OperandSize::Far32)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LGS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 181,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Far64, op_type: OperandType::Mem(Some(OperandSize::Far64)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LEA,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 141,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LEA,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 141,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LEA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 141,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LEAVE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 201,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LEAVE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 201,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LEAVE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 201,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LFENCE,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(232),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LGDT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LIDT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LGDT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LIDT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LLDT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LMSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LOCK,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 240,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LODS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 172,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LODS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 173,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LODS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 173,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LODS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 173,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LODSB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 172,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LODSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 173,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LODSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 173,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LODSQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 173,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LOOP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LOOPE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 225,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LOOPNE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 224,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Byte) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LSL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 3,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LSL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 3,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LSL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 3,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LTR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LZCNT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 189,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LZCNT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 189,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::LZCNT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 189,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MASKMOVDQU,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMASKMOVDQU,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MASKMOVQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MAXPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MAXPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MAXSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MAXSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMAXSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 95,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MFENCE,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(240),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MINPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MINPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MINSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MINSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMINSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 93,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MONITOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(200),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 136,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 136,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 137,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 137,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 137,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 138,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 138,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 139,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 139,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 139,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 140,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(Segment) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 140,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(Segment) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 142,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(Segment) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 142,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(Segment) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 160,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Offset }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 160,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Offset }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 161,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Offset }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 161,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Offset }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 161,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Offset }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 162,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Offset }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 162,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Offset }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 163,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Offset }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 163,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Offset }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 163,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Offset, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Offset }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 176,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 176,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 184,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 184,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 184,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOV,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVAPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVAPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVAPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVBE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(240),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVBE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(240),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(240),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVBE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(241),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVBE,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(241),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(241),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVDDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVDQ2Q,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 214,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA32,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA32,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA32,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA32,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA32,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA32,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA64,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA64,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA64,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA64,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA64,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQA64,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVDQU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVDQU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU8,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU8,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU8,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU8,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU8,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU8,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU16,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU16,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU16,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU16,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU16,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU16,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU32,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU64,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU64,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU64,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU64,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU64,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVDQU64,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVHLPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 23,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 23,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 23,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVHPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVHPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 23,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 23,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 23,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVLHPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 19,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 19,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 19,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVLPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 19,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 19,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 19,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVMSKPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 80,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVMSKPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 80,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVMSKPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 80,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVMSKPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 80,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVMSKPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 80,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVMSKPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 80,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVNTDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 231,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 231,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 231,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 231,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 231,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 231,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Mem(Some(OperandSize::Zmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVNTDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(42),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(42),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(42),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(42),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(42),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTDQA,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(42),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Mem(Some(OperandSize::Zmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVNTI,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 195,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVNTI,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 195,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVNTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Mem(Some(OperandSize::Zmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVNTPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVNTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Mem(Some(OperandSize::Zmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVNTQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 231,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 127,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 126,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 214,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 214,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 214,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVQ2DQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 214,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 164,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 165,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 165,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 165,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 164,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 165,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 165,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 165,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSHDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSHDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSHDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSHDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSHDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSHDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSLDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSLDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSLDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSLDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSLDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSLDUP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 18,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSX,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 190,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSX,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 190,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 190,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 191,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 191,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVSXD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 99,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVUPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVUPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 16,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMOVUPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 17,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVZX,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 182,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVZX,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 182,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVZX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 182,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVZX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 183,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MOVZX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 183,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MUL,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MUL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MULPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MULPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MULSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MULSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMULSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 89,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MULX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(246),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MULX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(246),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::MWAIT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(201),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NEG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NEG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NEG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NEG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NEG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NOP,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NOP,
	    allow_prefix: false,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 31,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NOP,
	    allow_prefix: false,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 31,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NOT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NOT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NOT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NOT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::NOT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 12,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 13,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 13,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 13,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 8,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 8,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 9,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 9,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 9,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 10,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 10,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 11,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 11,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 11,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ORPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 86,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 231,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 231,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 238,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUTS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUTS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUTS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(1),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DX)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUTSB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 110,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUTSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::OUTSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 111,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PABSB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(28),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PABSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(28),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PABSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PABSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PABSD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PABSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(28),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(28),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(28),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(28),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(28),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPABSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PACKSSWB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 99,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PACKSSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 99,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PACKSSDW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 107,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PACKSSDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 107,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKSSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 99,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKSSDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 107,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKSSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 99,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKSSDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 107,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKSSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 99,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKSSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 99,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKSSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 99,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKSSDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 107,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PACKUSDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(43),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKUSDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(43),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKUSDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(43),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKUSDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(43),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKUSDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(43),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PACKUSWB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: Some(true),
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PACKUSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: Some(true),
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKUSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: Some(true),
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKUSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: Some(true),
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKUSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: Some(true),
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKUSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: Some(true),
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPACKUSWB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: Some(true),
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 252,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 253,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 254,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 212,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 252,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 253,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 254,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 212,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 252,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 253,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 254,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 212,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 252,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 253,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 254,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 212,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 252,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 253,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 254,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 212,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 252,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 253,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDSB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 236,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 236,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 237,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 237,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 236,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 237,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 236,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 237,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 236,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 236,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 236,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 237,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 237,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 237,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDUSB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDUSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PADDUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 220,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPADDUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 221,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PALIGNR,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PALIGNR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPALIGNR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPALIGNR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPALIGNR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPALIGNR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPALIGNR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PAND,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PAND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 219,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PANDN,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PANDN,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDN,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDN,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDNQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDNQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPANDNQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 223,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PAUSE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PAVGB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 224,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PAVGB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 224,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PAVGW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PAVGW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 224,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 224,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 224,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 224,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 224,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPAVGW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 227,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PBLENDVB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(16),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::XMM0)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDVB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(76),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDVB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(76),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PBLENDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(14),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(14),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(14),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCLMULQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(68),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCLMULQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(68),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPEQB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 116,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPEQB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 116,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPEQW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 117,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPEQW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 117,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPEQD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 118,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPEQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 118,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 116,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 117,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 118,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 116,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 117,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 118,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 118,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 118,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 118,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 116,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 116,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 116,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 117,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 117,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 117,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPEQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPEQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPESTRI,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(97),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPESTRI,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(97),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPESTRM,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(96),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPESTRM,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(96),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPGTB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 100,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPGTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 100,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPGTW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 101,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPGTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 101,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPGTD,
	    allow_prefix: false,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPGTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 100,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 101,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 100,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 101,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 100,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 100,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 100,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 101,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 101,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 101,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPGTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(55),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(55),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(55),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(55),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(55),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPGTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(55),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPISTRI,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(99),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPISTRI,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(99),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PCMPISTRM,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(98),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPISTRM,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(98),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PDEP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(245),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PDEP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(245),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PEXT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(245),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PEXT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(245),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PEXTRB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PEXTRD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PEXTRQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PEXTRW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 197,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PEXTRW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 197,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PEXTRW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 197,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 197,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXTRW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHADDSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHADDSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHADDSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHADDSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHADDW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(1),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHADDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(1),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHADDD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(2),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHADDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(2),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHADDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(1),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHADDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(2),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHADDW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(1),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHADDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(2),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHMINPOSUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(65),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHMINPOSUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(65),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHSUBSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(7),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHSUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(7),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHSUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(7),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHSUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(7),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHSUBW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(5),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHSUBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(5),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHSUBD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(6),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PHSUBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(6),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHSUBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(5),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHSUBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(6),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHSUBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(5),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPHSUBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(6),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PINSRB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PINSRD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PINSRQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPINSRB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPINSRD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPINSRQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPINSRB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPINSRD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPINSRQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PINSRW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 196,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PINSRW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 196,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPINSRW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 196,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPINSRW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 196,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMADDUBSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMADDUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMADDWD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 245,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMADDWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 245,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 245,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 245,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 245,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 245,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMADDWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 245,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMAXSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 238,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMAXSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(60),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMAXSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 238,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMAXSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(61),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(60),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 238,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(61),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(60),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 238,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(61),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(60),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(60),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(60),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 238,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 238,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 238,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(61),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMAXUB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMAXUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMAXUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 222,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMAXUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMAXUQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMINSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 234,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMINSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMINSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 234,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 234,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 234,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 234,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 234,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 234,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMINSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINSQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMINUB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMINUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMINUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(58),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(58),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(58),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 218,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(58),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(58),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(58),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMINUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMINUQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVMSKB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 215,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVMSKB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 215,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVMSKB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 215,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVMSKB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 215,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVSXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVSXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVSXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVSXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVSXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(36),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVSXDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(36),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(36),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(36),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(36),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(36),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSXDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVZXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVZXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVZXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVZXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVZXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(52),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMOVZXDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(53),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(52),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(53),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(52),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(53),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(52),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(52),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVZXWQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(52),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULHRSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULHRSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHRSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHRSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHRSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHRSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHRSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULHUW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 228,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULHUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 228,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 228,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 228,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 228,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 228,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 228,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULHW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 229,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULHW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 229,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 229,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 229,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 229,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 229,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULHW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 229,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(64),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULLW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 213,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 213,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 213,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 213,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 213,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 213,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 213,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULUDQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 244,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PMULUDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 244,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULUDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 244,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULUDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 244,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULUDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 244,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULUDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 244,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMULUDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 244,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 143,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 143,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 143,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 88,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 31,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DS)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 7,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ES)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 23,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::SS)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 161,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::FS)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 161,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::FS)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 161,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::FS)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 169,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::GS)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 169,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::GS)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 169,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::GS)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POPA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 97,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POPAD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 97,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POPCNT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 184,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POPCNT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 184,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POPCNT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 184,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POPF,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 157,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POPFD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 157,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POPFQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 157,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POR,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::POR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPOR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPOR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPORQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPORQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPORQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 235,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PREFETCHT0,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 24,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PREFETCHT1,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 24,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PREFETCHT2,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 24,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PREFETCHNTA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 24,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PREFETCHW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 13,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PREFETCHWT1,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 13,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSADBW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSHUFB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSHUFB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(0),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(0),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(0),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(0),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(0),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(0),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSHUFD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSHUFHW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFHW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFHW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFHW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFHW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFHW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSHUFLW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFLW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFLW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFLW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFLW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSHUFLW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSHUFW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 112,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSIGNB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(8),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSIGNB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(8),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSIGNW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSIGNW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSIGND,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(10),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSIGND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(10),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSIGNB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(8),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSIGNW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSIGND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(10),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSIGNB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(8),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSIGNW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSIGND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(10),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 241,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 241,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSLLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 241,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 242,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 243,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 241,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 242,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 243,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 241,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 241,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 241,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 242,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 242,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 242,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 243,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 243,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 243,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRAW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 225,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 225,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRAW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRAD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRAD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 225,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 225,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 225,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 225,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 225,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 226,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSRLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 115,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 113,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 248,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 248,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 249,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 249,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 250,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 250,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 248,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 249,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 250,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 248,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 249,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 250,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 248,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 248,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 248,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 249,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 249,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 249,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 251,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 251,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 251,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 251,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 251,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 251,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 251,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBSB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 232,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 232,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 233,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 233,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 232,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 233,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 232,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 233,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 232,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 232,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 232,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 233,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 233,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBUSB,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBUSW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PSUBUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBUSB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 216,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSUBUSW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 217,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PTEST,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(23),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTEST,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(23),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTEST,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(23),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PTWRITE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PTWRITE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKHBW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 104,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKHBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 104,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKHWD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 105,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKHWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 105,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKHDQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 106,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKHDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 106,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKHQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 109,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 104,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 105,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 106,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 109,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 104,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 105,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 106,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 109,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 104,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 105,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 106,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKHQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 109,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKLBW,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 96,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKLBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 96,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKLWD,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 97,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKLWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 97,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKLDQ,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 98,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 98,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUNPCKLQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 108,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 96,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 97,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 98,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 108,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 96,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 97,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 98,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 108,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 96,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLWD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 97,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 98,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPUNPCKLQDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 108,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 80,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 80,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 80,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 106,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 104,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 104,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 14,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CS)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 22,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::SS)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 30,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::DS)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 6,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::ES)) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 160,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::FS)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSH,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 168,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::GS)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSHA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 96,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSHAD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 96,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSHF,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 156,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSHFD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 156,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PUSHFQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 156,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PXOR,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(Mmx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(Mmx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::PXOR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPXOR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPXOR,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPXORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPXORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPXORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPXORQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPXORQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPXORQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 239,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCPPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 83,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCPPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 83,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCPPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 83,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RCPSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 83,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCPSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 83,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDFSBASE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDFSBASE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDGSBASE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDGSBASE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDMSR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 50,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDPID,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDPID,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDPKRU,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(238),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDPMC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 51,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDRAND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDRAND,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDRAND,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDSEED,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDSEED,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDSEED,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDTSC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 49,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RDTSCP,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(249),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RET,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 195,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RET,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 203,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RET,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 194,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RET,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 202,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RORX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(240),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RORX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(240),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROUNDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VROUNDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VROUNDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROUNDPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VROUNDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(8),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VROUNDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(8),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROUNDSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VROUNDSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::ROUNDSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(10),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VROUNDSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(10),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RSM,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 170,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RSQRTPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 82,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 82,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 82,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::RSQRTSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 82,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRTSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 82,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAHF,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 158,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SAR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(7),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 208,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 210,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 211,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 209,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Fixed(FixedOperand::Constant(1)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SARX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(247),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHLX,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(247),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHRX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(247),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SARX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(247),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHLX,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(247),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHRX,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(247),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 28,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 29,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 29,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 29,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 24,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 24,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 25,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 25,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 25,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 26,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 26,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SBB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 27,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SCAS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SCAS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 175,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SCAS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 175,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SCAS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 175,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SCASB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SCASW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 175,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SCASD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 175,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SCASQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 175,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 151,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 151,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 150,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 150,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 148,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 148,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 159,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 159,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 157,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 157,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 156,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 156,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 158,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 158,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 150,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNA,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 150,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNAE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 146,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 151,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNBE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 151,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 147,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 149,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 149,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 158,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 158,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 156,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNGE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 156,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 157,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 157,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SETNLE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 159,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SFENCE,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(248),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SGDT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHA1MSG1,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(201),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHA1MSG2,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(202),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHA1NEXTE,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(200),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHA1RNDS4,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(204),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHA256MSG1,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(204),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHA256MSG2,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(205),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHA256RNDS2,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(203),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::XMM0)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 164,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 165,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 164,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 164,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 165,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHLD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 165,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHRD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 172,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHRD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 173,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHRD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 172,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: false,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHRD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 172,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHRD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 173,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHRD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 173,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::CL)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHUFPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SHUFPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SIDT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SLDT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SLDT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SMSW,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SMSW,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SMSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SQRTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SQRTPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SQRTSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SQRTSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSQRTSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 81,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STAC,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(203),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STC,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 249,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 253,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 251,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STMXCSR,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSTMXCSR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STOS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 170,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STOS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 171,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Mem(Some(OperandSize::Word)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STOS,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 171,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STOS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 171,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STOSB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 170,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STOSW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 171,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STOSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 171,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STOSQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 171,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::STR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 44,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 45,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 40,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 41,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 42,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 43,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUBPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUBSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBSD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SUBSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSUBSS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 92,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SWAPGS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(248),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SYSCALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 5,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SYSENTER,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 52,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SYSEXIT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 53,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SYSEXIT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 53,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SYSRET,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 7,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::SYSRET,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 7,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 168,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 169,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 169,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 169,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 246,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 247,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 132,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 132,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 133,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 133,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TEST,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 133,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TZCNT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 188,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TZCNT,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 188,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::TZCNT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 188,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::UCOMISD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 46,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUCOMISD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 46,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUCOMISD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 46,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::UCOMISS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 46,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUCOMISS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 46,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUCOMISS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 46,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::UD0,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 255,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::UD1,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 185,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::UD2,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 11,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::UNPCKHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::UNPCKHPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKHPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 21,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::UNPCKLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::UNPCKLPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VUNPCKLPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 20,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VALIGND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VALIGNQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VALIGND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VALIGNQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VALIGND,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VALIGNQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(3),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(101),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(101),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(101),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDMPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(101),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDMPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(101),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBLENDMPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(101),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(24),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(24),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Mem(Some(OperandSize::Dword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(25),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Mem(Some(OperandSize::Qword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTF128,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(26),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(24),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(24),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(25),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(25),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(25),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTF32X2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(25),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTF32X2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(25),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(24),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(24),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(24),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTF32X4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(26),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTF32X4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(26),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTF64X2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(26),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMPRESSPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(138),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMPRESSPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(138),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMPRESSPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(138),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMPRESSPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(138),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMPRESSPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(138),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCOMPRESSPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(138),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPD2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPH2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(19),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPH2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(19),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPH2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(19),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPH2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(19),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPH2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(19),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PH,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PH,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PH,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PH,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2PH,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(29),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTPS2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTQQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTQQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTQQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 230,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTQQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTQQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTQQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 91,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSD2USI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSD2USI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSS2USI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTSS2USI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 121,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(2),
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPD2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2QQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2UDQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTPS2UQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSD2USI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSD2USI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSS2USI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTTSS2USI,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 120,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUDQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUDQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUDQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUDQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUDQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUDQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUQQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUQQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUQQ2PD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUQQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUQQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUQQ2PS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 122,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUSI2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUSI2SD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUSI2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VCVTUSI2SS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 123,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDBPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDBPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VDBPSADBW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VERR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VERW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXP2PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(200),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXP2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(200),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXPANDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(136),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXPANDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(136),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXPANDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(136),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXPANDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(136),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXPANDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(136),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXPANDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(136),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXTRACTF128,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(25),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXTRACTF32x4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(25),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXTRACTF64x4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(27),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXTRACTI128,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXTRACTI32x4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VEXTRACTI64x4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(59),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFIXUPIMMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(84),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFIXUPIMMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(84),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFIXUPIMMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(84),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFIXUPIMMPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(84),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFIXUPIMMPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(84),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFIXUPIMMPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(84),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFIXUPIMMSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(85),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFIXUPIMMSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(85),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(152),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(168),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(184),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(153),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(169),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(185),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(153),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(169),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(185),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(153),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(169),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(185),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD132SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(153),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD213SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(169),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADD231SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(185),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(166),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(182),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMADDSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(150),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(154),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(170),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(186),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(155),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(171),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(187),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(155),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(171),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(187),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(155),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(171),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(187),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB132SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(155),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB213SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(171),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUB231SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(187),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(151),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(167),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFMSUBADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(183),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(156),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(172),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(188),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(157),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(173),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(189),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(157),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(173),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(189),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(157),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(173),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(189),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD132SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(157),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD213SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(173),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMADD231SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(189),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(158),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(174),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(190),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(159),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(175),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(191),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(159),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(175),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(191),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(159),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(175),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(191),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB132SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(159),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB213SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(175),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFNMSUB231SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(191),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFPCLASSPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFPCLASSPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFPCLASSPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFPCLASSPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFPCLASSPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFPCLASSPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFPCLASSSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: Some(true),
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VFPCLASSSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: Some(true),
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(146),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERPF0DPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(198),
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERPF0QPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(199),
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERPF0DPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(198),
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERPF0QPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(199),
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERPF1DPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(198),
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERPF1QPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(199),
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERPF1DPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(198),
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERPF1QPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(199),
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGATHERQPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(147),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETEXPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETEXPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETEXPPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETEXPPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETEXPPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETEXPPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(66),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETEXPSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(67),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETEXPSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(67),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETMANTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETMANTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETMANTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETMANTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETMANTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETMANTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETMANTSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VGETMANTSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VINSERTF128,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(24),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VINSERTI128,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMASKMOVPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(44),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMASKMOVPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(44),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMASKMOVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(45),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMASKMOVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(45),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMASKMOVPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(46),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMASKMOVPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(46),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMASKMOVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(47),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VMASKMOVPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(47),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(2),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(2),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(100),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(100),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(100),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(100),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(100),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBLENDMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(100),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(120),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(120),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(120),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(120),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(120),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(121),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(121),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(121),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(121),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(121),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(88),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(88),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(88),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(88),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(88),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(89),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(89),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(89),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(89),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(89),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI32x2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(89),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI32x2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(89),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI32x2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(89),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI128,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(90),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI32X4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(90),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI32X4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(90),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI64X2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(90),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI64X2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(90),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI32X8,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(91),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VBROADCASTI64X4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(91),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(122),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(122),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(122),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(123),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(123),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(123),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(124),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(124),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(124),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(124),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(124),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(124),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTMB2Q,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(42),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTMB2Q,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(42),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTMB2Q,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(42),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTMW2D,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(58),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTMW2D,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(58),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPBROADCASTMW2D,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(58),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(31),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(31),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(31),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(31),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(31),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(31),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(30),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(63),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCMPUW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(62),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCOMPRESSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(139),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCOMPRESSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(139),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCOMPRESSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(139),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCOMPRESSQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(139),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCOMPRESSQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(139),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCOMPRESSQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(139),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCONFLICTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(196),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCONFLICTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(196),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCONFLICTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(196),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCONFLICTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(196),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCONFLICTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(196),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPCONFLICTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(196),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERM2F128,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(6),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERM2I128,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(70),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(54),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(54),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(54),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(141),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(141),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(141),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2W,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(117),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2W,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(117),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2W,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(117),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2D,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(118),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2D,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(118),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2D,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(118),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2Q,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(118),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2Q,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(118),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2Q,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(118),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(119),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(119),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(119),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(119),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(119),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMI2PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(119),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(13),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(13),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(13),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(13),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(13),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(5),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(5),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(5),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(5),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(5),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(12),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(12),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(12),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(12),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(12),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMILPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(4),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(1),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(1),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(1),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(22),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(0),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(0),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(0),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(54),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(54),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2W,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(125),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2W,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(125),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2W,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(125),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2D,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(126),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2D,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(126),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2D,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(126),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2Q,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(126),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2Q,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(126),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2Q,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(126),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(127),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(127),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(127),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(127),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(127),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPERMT2PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(127),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXPANDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(137),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXPANDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(137),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXPANDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(137),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXPANDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(137),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXPANDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(137),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPEXPANDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(137),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(144),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPGATHERQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(145),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPLZCNTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(68),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPLZCNTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(68),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPLZCNTD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(68),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPLZCNTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(68),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPLZCNTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(68),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPLZCNTQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(68),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMASKMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(140),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMASKMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(140),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMASKMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(140),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMASKMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(140),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMASKMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(142),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMASKMOVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(142),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMASKMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(142),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Mem(Some(OperandSize::Xmmword)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMASKMOVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(142),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Mem(Some(OperandSize::Ymmword)) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVB2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVB2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVB2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVW2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVW2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVW2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(41),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVD2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVD2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVD2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQ2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQ2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQ2M,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(57),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVDB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSDB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSDB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(17),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVDB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSDB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSDB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(17),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVDB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(49),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSDB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(33),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSDB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(17),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(19),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(19),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(51),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSDW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(19),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2B,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2B,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2B,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2W,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2W,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2W,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(40),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2D,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2D,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2D,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2Q,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2Q,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVM2Q,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(56),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSQB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSQB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(18),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSQB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSQB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(18),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(50),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSQB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(34),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSQB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(18),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(53),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSQD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSQD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(53),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSQD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSQD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(53),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSQD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSQD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(52),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSQW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(36),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSQW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(52),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSQW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(36),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSQW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVQW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(52),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSQW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(36),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSQW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVWB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSWB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSWB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(16),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVWB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSWB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSWB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(16),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVWB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(48),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVSWB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(32),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPMOVUSWB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(16),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(21),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPROLQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(1),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(20),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPRORQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Ndd), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 114,
	    secondary_opcode: None,
	    opcode_ext: Some(0),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(160),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(160),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERDD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(160),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(160),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(160),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERDQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(160),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(161),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(161),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERQD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(161),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(161),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(161),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSCATTERQQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(161),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(18),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(18),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(18),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSLLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(71),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(70),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(70),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(17),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(17),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(17),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(70),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(70),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(70),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(70),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(70),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRAVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(70),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(16),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(16),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(16),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPSRLVQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(69),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTERNLOGD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTERNLOGD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTERNLOGD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTERNLOGQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTERNLOGQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTERNLOGQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Dds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(37),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMB,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMW,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTMQ,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMW,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(38),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VPTESTNMQ,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(39),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Reg(Mask) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRANGEPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(80),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRANGEPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(80),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRANGEPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(80),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRANGEPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(80),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRANGEPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(80),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRANGEPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(80),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRANGESD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(81),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRANGESS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(81),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP14PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(76),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP14PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(76),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP14PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(76),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP14PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(76),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP14PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(76),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP14PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(76),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP14SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(77),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP14SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(77),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP28PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(202),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP28PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(202),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP28SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(203),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRCP28SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(203),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VREDUCEPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(86),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VREDUCEPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(86),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VREDUCEPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(86),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VREDUCEPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(86),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VREDUCEPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(86),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VREDUCEPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(86),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VREDUCESD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(87),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VREDUCESS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(87),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRNDSCALEPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRNDSCALEPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRNDSCALEPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(9),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRNDSCALEPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(8),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRNDSCALEPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(8),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRNDSCALEPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(8),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRNDSCALESD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(11),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRNDSCALESS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(10),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT14PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(78),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT14PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(78),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT14PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(78),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT14PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(78),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT14PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(78),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT14PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(78),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT14SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(79),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT14SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(79),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT28PD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(204),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT28PS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(204),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT28SD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(205),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VRSQRT28SS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(205),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: true,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCALEFPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(44),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCALEFPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(44),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCALEFPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(44),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCALEFPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(44),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCALEFPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(44),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCALEFPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(44),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCALEFSD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(45),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Qword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCALEFSS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: None, operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(45),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: true,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Dword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(162),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(162),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERDPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(162),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(162),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(162),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERDPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(162),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERQPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(163),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERQPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(163),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERQPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(163),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERQPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(163),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERQPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(163),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERQPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(163),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERPF0DPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(198),
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERPF0QPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(199),
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERPF0DPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(198),
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERPF0QPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(199),
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERPF1DPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(198),
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERPF1QPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(199),
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERPF1DPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(198),
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSCATTERPF1QPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(199),
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: true,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Mib, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFF32x4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFF64x2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(35),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFI32x4,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(67),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VSHUFI64x2,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 58,
	    secondary_opcode: Some(67),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm })],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VTESTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(14),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VTESTPS,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: Some(14),
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VTESTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VTESTPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 56,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VZEROALL,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 119,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VZEROUPPER,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: None, we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 119,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::WAIT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 155,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::FWAIT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 155,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::WBINVD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 9,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::WRFSBASE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::WRFSBASE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(2),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::WRGSBASE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::WRGSBASE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::WRMSR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 48,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::WRPKRU,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(239),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XABORT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 198,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(248),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XACQUIRE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(242),
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XRELEASE,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: Some(243),
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 0,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: true,
	    primary_opcode: 192,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XADD,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XADD,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 193,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XBEGIN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(248),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Word) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XBEGIN,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(248),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Rel(OperandSize::Dword) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 144,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::OpcodeAddend, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 134,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 134,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 134,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 134,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XCHG,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 135,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XEND,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(213),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XGETBV,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(208),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XLAT,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 215,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Mem(Some(OperandSize::Byte)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XLATB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 215,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XLATB,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 215,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 52,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AL)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 53,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::AX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 53,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::EAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 53,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::Fixed, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Fixed(FixedOperand::Reg(Reg::RAX)) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 128,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 129,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 131,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::Imm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Imm }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 48,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 48,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 49,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 49,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 49,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 50,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: None }),
	    two_byte_opcode: false,
	    primary_opcode: 50,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Byte, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Byte, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Byte))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 51,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Word, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Word, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Word))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: ConditionalOnSize(0),
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: false,
	    primary_opcode: 51,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Dword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Dword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Dword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XOR,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: false,
	    primary_opcode: 51,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Qword, op_type: OperandType::Reg(General) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Qword, op_type: OperandType::Set(&[Reg(General), Mem(Some(OperandSize::Qword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPD,
	    allow_prefix: true,
	    operand_size_prefix: Always,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Qword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XORPS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::ReadWrite, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Vex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: None }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword))]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Xmmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Xmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Xmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Ymmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Ymmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::VXORPS,
	    allow_prefix: true,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Evex { vector_size: Some(OperandSize::Ymmword), operand_behavior: Some(VexOperandBehavior::Nds), we: Some(false) }),
	    two_byte_opcode: true,
	    primary_opcode: 87,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: None,
	    has_mod_rm: true,
	    allow_mask: true,
	    allow_merge_mode: true,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmReg, access: OperandAccess::Write, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::Vex, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Reg(Avx) }), Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Zmmword, op_type: OperandType::Set(&[Reg(Avx), Mem(Some(OperandSize::Zmmword)), Bcst(OperandSize::Dword)]) }), None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XRSTOR,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XRSTOR64,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XRSTORS,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XRSTORS64,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(3),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XSAVE,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XSAVE64,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XSAVEC,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XSAVEC64,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(4),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XSAVEOPT,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XSAVEOPT64,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 174,
	    secondary_opcode: None,
	    opcode_ext: Some(6),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Write, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XSAVES,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XSAVES64,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: Some(CompositePrefix::Rex { size_64: Some(true) }),
	    two_byte_opcode: true,
	    primary_opcode: 199,
	    secondary_opcode: None,
	    opcode_ext: Some(5),
	    fixed_post: None,
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [Some(OperandDefinition { encoding: OperandEncoding::ModRmRm, access: OperandAccess::Read, size: OperandSize::Unsized, op_type: OperandType::Mem(Some(OperandSize::Unsized)) }), None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: false,
	    valid_16: false,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XSETBV,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(209),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: true,
	    desc: ""
	},
	InstructionDefinition {
	    mnemonic: Mnemonic::XTEST,
	    allow_prefix: false,
	    operand_size_prefix: Never,
	    address_size_prefix: None,
	    fixed_prefix: None,
	    composite_prefix: None,
	    two_byte_opcode: true,
	    primary_opcode: 1,
	    secondary_opcode: None,
	    opcode_ext: None,
	    fixed_post: Some(214),
	    has_mod_rm: false,
	    allow_mask: false,
	    allow_merge_mode: false,
	    allow_rounding: false,
	    allow_sae: false,
	    operands: [None, None, None, None],
	    feature_set: None,
	    valid_64: true,
	    valid_32: true,
	    valid_16: false,
	    desc: ""
	},
];
